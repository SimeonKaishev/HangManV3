<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>